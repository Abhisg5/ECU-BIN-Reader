name: Build and Release ECU BIN Reader

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build macOS DMG
      run: |
        python build_macos.py
        
    - name: Upload macOS DMG
      uses: actions/upload-artifact@v4
      with:
        name: ecu-bin-reader-macos
        path: build/macos/ECU_BIN_Reader.dmg
        
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build Windows EXE
      run: |
        python build_windows.py
        
    - name: Upload Windows EXE
      uses: actions/upload-artifact@v4
      with:
        name: ecu-bin-reader-windows
        path: build/windows/ECU_BIN_Reader.exe
        
  create-release:
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download macOS DMG
      uses: actions/download-artifact@v4
      with:
        name: ecu-bin-reader-macos
        path: dist/
        
    - name: Download Windows EXE
      uses: actions/download-artifact@v4
      with:
        name: ecu-bin-reader-windows
        path: dist/
        
        - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ECU BIN Reader ${{ github.ref_name }}
        body: |
          ## ECU BIN Reader ${{ github.ref_name }}
          
          ### What's New
          - Professional ECU BIN file extraction tool
          - Cross-platform support (Windows & macOS)
          - Responsive dark theme UI
          - OBD2 adapter detection and communication
          - ECU scanning and BIN file extraction
          
          ### Downloads
          - **macOS**: ECU_BIN_Reader.dmg
          - **Windows**: ECU_BIN_Reader.exe
          
          ### Installation
          1. Download the appropriate file for your OS
          2. Run the installer
          3. Connect your OBD2 adapter
          4. Start extracting ECU BIN files!
          
          ### Features
          - ðŸ”Œ Automatic OBD2 adapter detection
          - ðŸš— ECU scanning and protocol detection
          - ðŸ“– Full BIN file extraction
          - ðŸ’¾ Save and manage BIN files
          - ðŸŽ¨ Professional dark theme UI
          - ðŸ“± Responsive design for any screen size
        draft: false
        prerelease: false
        
    - name: Upload DMG
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ECU_BIN_Reader.dmg
        asset_name: ECU_BIN_Reader.dmg
        asset_content_type: application/octet-stream
        
    - name: Upload EXE
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ECU_BIN_Reader.exe
        asset_name: ECU_BIN_Reader.exe
        asset_content_type: application/octet-stream 